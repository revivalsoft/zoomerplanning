{% extends 'base_gantt.html.twig' %}

{% block title %}Diagramme de Gantt -
	{{ project.name }}
{% endblock %}

{% block body %}
	<div class="container my-4">
		<h1>Diagramme de Gantt :
			{{ project.name }}</h1>

		<a href="{{ path('project_index') }}" class="btn btn-secondary mb-3">← Retour aux projets</a>

		<div class="btn-group mb-3">
			<button class="btn btn-sm btn-outline-secondary no-print" onclick="window.print()">
				<i class="bi bi-printer"></i>
				Imprimer
			</button>
			<button onclick="changeView('Day')" class="btn btn-outline-primary">Jour</button>
			<button onclick="changeView('Week')" class="btn btn-outline-primary active">Semaine</button>
			<button onclick="changeView('Month')" class="btn btn-outline-primary">Mois</button>
		</div>

		<div id="gantt-alert" class="alert d-none" role="alert"></div>
		<div id="gantt" style="border:1px solid #ccc; background:#fff; min-height: 400px;"></div>

		<h4 class="mt-5  no-print">Gérer les dépendances</h4>
		<div class="d-flex flex-wrap gap-2 mb-4">
			{% for gtask in project.gtasks %}
				<button class="btn btn-outline-primary btn-sm" data-bs-toggle="modal" data-bs-target="#dependencyModal{{ gtask.id }}">
					Dépendances :
					{{ gtask.name }}
				</button>
			{% endfor %}
		</div>

		{% for gtask in project.gtasks %}
			<div class="modal fade" id="dependencyModal{{ gtask.id }}" tabindex="-1" aria-labelledby="dependencyModalLabel{{ gtask.id }}" aria-hidden="true">
				<div class="modal-dialog">
					<div class="modal-content">
						<form method="post" action="{{ path('dependency_manage', { id: gtask.id }) }}">
							<div class="modal-header">
								<h5 class="modal-title">Dépendances de
									{{ gtask.name }}</h5>
								<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
							</div>
							<div class="modal-body">
								{% for other in project.gtasks %}
									{% if other.id != gtask.id %}
										{% set isCircular = other.id in gtask.circularToIds %}
										{% set alreadyChecked = other.id in gtask.dependencyToIds %}

										<div class="form-check" title="{{ isCircular and not alreadyChecked ? 'Impossible : cela créerait un cycle avec ' ~ other.name ~ '.' : '' }}">
											<input class="form-check-input" type="checkbox" name="dependencies[]" value="{{ other.id }}" {% if alreadyChecked %} checked {% endif %} {% if isCircular and not alreadyChecked %} disabled {% endif %}>
											<label class="form-check-label">
												{{ other.name }}
												{% if isCircular and not alreadyChecked %}
													<span class="text-danger fw-bold" title="Cycle détecté">⚠️</span>
												{% endif %}
											</label>
										</div>
									{% endif %}
								{% endfor %}
							</div>
							<div class="modal-footer">
								<button type="submit" class="btn btn-success">Enregistrer</button>
							</div>
						</form>
					</div>
				</div>
			</div>
		{% endfor %}
	</div>

	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
	<script src="https://unpkg.com/frappe-gantt@0.5.0/dist/frappe-gantt.min.js"></script>

	<style>
		.bar.task-waiting {
			fill: #ffc107 !important;
		}
		.bar.task-inprogress {
			fill: #0d6efd !important;
		}
		.bar.task-done {
			fill: #198754 !important;
		}
		.bar-label {
			fill: #000 !important;
			font-weight: bold;
		}

		@media print {
			.btn,
			.btn-group,
			.alert,
			.form-check,
			.navbar,
			.no-print {
				display: none !important;
			}
			#gantt {
				border: none !important;
				background: #fff !important;
			}
			#gantt-container {
				width: 100% !important;
				max-width: 100% !important;
			}
			body,
			html,
			* {
				overflow-x: hidden !important;
			}
		}
	</style>

	<script>
		function showGanttAlert(message, type = 'success') {
const alertBox = document.getElementById('gantt-alert');
alertBox.className = `alert alert-${type}`;
alertBox.textContent = message;
alertBox.classList.remove('d-none');
setTimeout(() => {
alertBox.classList.add('d-none');
}, 3000);
}

document.addEventListener('DOMContentLoaded', () => {
const gtasksRaw = [{% for gtask in project.gtasks %}{
id: '{{ gtask.id }}',
name: '{{ gtask.name|e('js') }}',
start: '{{ gtask.startDate.format('Y-m-d') }}',
end: '{{ gtask.endDate.format('Y-m-d') }}',
progress: {{ gtask.status == 'done' ? 100 : (gtask.status == 'in_progress' ? 50 : 0) }},
dependencies: '{{ gtask.dependencyToIds|join(",") }}'
}
{% if not loop.last %},{% endif %}{% endfor %}];

if (gtasksRaw.length === 0) {
document.getElementById('gantt').innerHTML = '<div class="alert alert-warning">Ce projet ne contient aucune tâche.</div>';
return;
}

const gtasks = gtasksRaw.map(t => ({
...t,
start: new Date(t.start + 'T12:00:00'),
end: new Date(t.end + 'T12:00:00')
}));

const gantt = new Gantt("#gantt", gtasks, {
view_mode: 'Week',
language: 'fr',
on_date_change: function (gtask) {
gtask._start.setHours(12, 0, 0, 0);
gtask._end.setHours(12, 0, 0, 0);

function formatDateLocal(date) {
const year = date.getFullYear();
const month = String(date.getMonth() + 1).padStart(2, '0');
const day = String(date.getDate()).padStart(2, '0');
return `${year}-${month}-${day}`;
}

const newStart = formatDateLocal(gtask._start);
const newEnd = formatDateLocal(gtask._end);

fetch (`/gtask/update-dates/${
gtask.id
}`, {
method: 'POST',
headers: {
'Content-Type': 'application/json',
'X-Requested-With': 'XMLHttpRequest'
},
body: JSON.stringify(
{start: newStart, end: newEnd}
)
}).then(res => res.json()).then(data => {
if (!data.success) {
showGanttAlert("Erreur : " + (
data.error || 'Inconnue'
), 'danger');
return;
}
if (data.updated) {
showGanttAlert("Dates enregistrées ✅", 'success');
} else {
showGanttAlert("Pas de changement détecté ⚠️", 'warning');
}
}).catch(error => {
console.error("Erreur JS :", error);
showGanttAlert("Erreur réseau ou serveur ❌", 'danger');
});
}
});

window.changeView = function (mode) {
gantt.change_view_mode(mode);
document.querySelectorAll('.btn-group button').forEach(btn => btn.classList.remove('active'));
document.querySelector (`.btn-group button[onclick*="${mode}"]`).classList.add('active');
};
});
	</script>
{% endblock %}
